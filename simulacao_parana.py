from flask import Flask, request, jsonify

app = Flask(__name__)

@app.route("/", methods=["POST"])
def receber_webhook():
    try:
        # Exibe o corpo bruto recebido
        raw_data = request.get_data(as_text=True)
        print("üì¶ RAW BODY RECEBIDO:", raw_data)

        # Tenta converter o corpo em JSON
        data = request.get_json(force=True, silent=True)
        if not data:
            return jsonify({
                "command": "erro",
                "message": "‚ùå JSON malformado ou vazio."
            })

        print("üß† JSON PARSEADO:", data)

        command = data.get("command")
        print("üìå Comando recebido:", command)

        cpf = None

        # Verifica se o comando √© o esperado e tenta extrair o CPF
        if command == "simular_fgts":
            cpf = (
                data.get("message", {}).get("text") or
                data.get("contact", {}).get("document") or
                data.get("cpf")
            )

        print("üßæ CPF detectado:", cpf)

        # Valida√ß√£o b√°sica do CPF
        if not cpf or len(cpf) != 11 or not cpf.isdigit():
            return jsonify({
                "command": "cpf_invalido",
                "message": "‚ùå CPF inv√°lido. Envie um CPF com 11 d√≠gitos num√©ricos."
            })

        # CPF v√°lido
        return jsonify({
            "command": "cpf_valido",
            "message": f"‚úÖ CPF {cpf} validado com sucesso!"
        })

    except Exception as e:
        print("‚ùå ERRO AO PROCESSAR:", str(e))
        return jsonify({
            "command": "erro",
            "message": f"‚ùå Erro ao processar requisi√ß√£o: {str(e)}"
        })


@app.route("/", methods=["GET"])
def status():
    return "‚úÖ API de teste ativa e aguardando chamadas da Digisac."
